cmake_minimum_required(VERSION 3.9)
project(TEST_PROJECCT)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
set(SRC_DIR ${CMAKE_SOURCE_DIR}/src)

# project headers
include_directories(
  "${CMAKE_SOURCE_DIR}/include" 
  "${CMAKE_SOURCE_DIR}/include/elements"
  )
  
find_package(Boost 1.66.0 COMPONENTS system iostreams REQUIRED)
# external headers
if(APPLE)
  set(CELLAR "/usr/local/Cellar")
  include_directories("${CELLAR}/boost/1.66.0/boost"
    "/usr/local/include/eigen3"
    "$ENV{HOME}/REPOS/gnuplot-iostream")
  link_directories("${CELLAR}/boost/1.66.0/lib")
else(APPLE)
  include_directories("/usr/local/boost_1_66_0"
    "/usr/include/eigen3")
  link_directories(/usr/local/boost_1_66_0/stage/lib)
endif(APPLE)

set(LIB_SOURCES 
  "${SRC_DIR}/particle.cc" 
  "${SRC_DIR}/data_log.cc"
  "${SRC_DIR}/lattice.cc"
  "${SRC_DIR}/tilt.cc"
  # elements
  "${SRC_DIR}/elements/element.cc" 
  "${SRC_DIR}/elements/dipole.cc" 
  "${SRC_DIR}/elements/quadrupole.cc" 
  "${SRC_DIR}/elements/sextupole.cc" 
  "${SRC_DIR}/elements/wien_filter.cc"
  "${SRC_DIR}/elements/rf_element.cc"
  # other
  "${SRC_DIR}/right_hand_side.cc"
  )

set(CMAKE_CXX_STANDARD 11)

add_library(cpp_integrator ${LIB_SOURCES})

## adding executables
set(APP_SOURCES "${CMAKE_SOURCE_DIR}/lattices/FODO_lattice.cc"
  "${CMAKE_SOURCE_DIR}/test/test_lattice.cc")


add_executable( ${app_name} ${app_src_file} {LIB_SOURCES})
# link libraries to each app
target_link_libraries( ${app_name} ${Boost_LIBRARIES})


############################################################################
# foreach(app_src_file ${APP_SOURCES})
#   # cut off .cpp.
#   string( REPLACE ".cc" "" app_name ${app_src_file} )
#   add_executable( ${app_name} ${app_src_file} ${LIB_SOURCES})
#   # link libraries to each app
#   target_link_libraries( ${app_name} ${Boost_LIBRARIES})
# endforeach(app_src_file ${APP_SOURCES})

#add_executable(${CODE_NAME} ${LIB_SOURCES})
#target_link_libraries(${CODE_NAME} ${Boost_LIBRARIES})
